{"version":3,"sources":["components/Button.js","components/Footer.js","components/LoginForm.js","components/AddBlogForm.js","components/Togglable.js","components/ErrorNotification.js","components/SuccessNotification.js","components/BlogDetail.js","components/Blog.js","components/BlogList.js","services/blogs.js","services/login.js","hooks/index.js","App.js","index.js"],"names":["Button","onClick","text","Footer","style","color","fontStyle","fontSize","LoginForm","handleLogin","username","password","clsssName","onSubmit","className","inputProps","name","type","AddBlogFrom","props","console","log","handleAddBlog","title","author","url","required","Togglable","React","forwardRef","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","ErrorNotification","message","SuccessNotification","BlogDetail","blog","handleLike","handleDelete","showStyle","href","likes","user","Blog","blogRef","createRef","paddingTop","paddingLeft","border","borderWidth","marginBottom","current","BlogList","blogs","sort","a","b","map","key","id","token","async","axios","get","response","data","newObject","config","headers","Authorization","post","put","delete","newToken","credentials","useField","value","setValue","onChange","event","target","reset","App","setBlogs","setUser","errorMessage","setErrorMessage","successMessage","setSuccessMessage","addBlogFormRef","useEffect","blogService","then","initialBlog","loggedUserJSON","window","localStorage","getItem","JSON","parse","preventDefault","loginService","setItem","stringify","setTimeout","newBlog","blogCreated","handleLogout","clear","handleLikeUpdate","blogId","find","foundBlog","newLike","blogToUpdate","blogUpdated","blogToDelete","filter","newBlogList","confirm","deletedBlog","length","AddBlogForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8d2fdc6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({ onClick, text }) => { \n    return (\n      <button onClick={onClick}>\n         {text}\n      </button>\n    )\n  }\n\n  export default Button;\n\n","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n  \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em> Bloglist app, Department of Computer Science, University of Helsinki 2019</em>\n      </div> \n    )\n  }\n\n\n  export default Footer;","\nimport React from 'react';\nimport PropTypes from \"prop-types\"\n\nconst LoginForm = ({ handleLogin, username, password}) => {\n\n\n  return ( \n    <div clsssName =\"form-login\">\n        <h2>Log in to application</h2> \n        <form onSubmit={handleLogin}>\n                <div className =\"form-group-control\">\n                    username: \n                        <input\n                         {...username.inputProps}\n                         name = \"name\"\n                        />\n                </div>\n                <div className =\"form-group-control\">\n                    password: \n                        <input\n                         {...password.inputProps}\n                         name =\"password\"\n                      />\n                </div>\n                <button type=\"submit\" >login</button>\n        </form>\n    </div>\n  )\n}\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  username:PropTypes.object.isRequired,\n  password: PropTypes.object.isRequired\n}\nexport default LoginForm\n","import React from 'react';\nimport PropTypes from \"prop-types\"\n\n\nconst AddBlogFrom = (props) =>{\n  console.log(\"add form: \", props)\n  const { handleAddBlog,\n          title, \n          author,\n          url} = props\n    \n\n   return(\n        <div className = \"form-group\">\n             <form onSubmit={handleAddBlog}>\n                      <div className = \"form-group-control\">\n                        Title: <input \n                                   {...title.inputProps} \n                                    required\n                                    />\n                        </div>\n                        <div className = \"form-group-control\">\n                        Author: <input \n                                     {...author.inputProps} \n                                    required\n                                    />\n                        </div>\n                        <div className = \"form-group-control\">\n                        url: <input \n                                    {...url.inputProps} \n                                    required\n                                    />\n                        </div>\n                        <div className = \"form-group-control\">\n                        <button type=\"submit\">Create</button>\n                        </div>\n            </form>\n        </div>\n    )\n}\n\nAddBlogFrom.propTypes = {\n    handleAddBlog: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  }\n\nexport default AddBlogFrom;","import React, { useState, useImperativeHandle } from 'react'\n\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n  \n    const toggleVisibility = () => {\n      setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n          toggleVisibility\n        }\n      })\n  \n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n        </div>\n        <div style={showWhenVisible} className=\"togglableContent\" >\n          {props.children}\n          <button onClick={toggleVisibility}>cancel</button>\n        </div>\n      </div>\n    )\n  })\n  \n  export default Togglable","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\n  export default ErrorNotification","import React from 'react'\n\nconst SuccessNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\n  export default SuccessNotification","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from \"prop-types\"\nimport Button from './Button'\n\n\nconst BlogDetail = React.forwardRef(({blog, handleLike, handleDelete}, ref) => {\n  //const {blog, handleLikeChange, handleDelete} = props\n  console.log(\"blog visibility: \", blog)\n  \n  \n    const [visible, setVisible] = useState(false)\n\n    const toggleVisibility = () => {\n      setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n          toggleVisibility\n        }\n      })\n  \n    const showStyle = { display: visible ? '' : 'none' }\n    console.log(\"blog detail: \", blog)\n  \n    return (\n      <>\n          <div style={showStyle} className=\"blog-detail\" >\n                  \n                  <p>\n                    <a href={blog.url}>{blog.url}</a>\n                  </p>\n                  <p>\n                      {blog.likes} likes <Button onClick={handleLike} text = \"like\"/>\n                    </p>\n                  <p>\n                    added by <span>{blog.user.name}</span>\n                  </p>\n                  <Button onClick={handleDelete} text = \"remove\"/>\n          </div>\n      </>\n    )\n  })\n\n  BlogDetail.propTypes = {\n    handleLikeChange: PropTypes.func.isRequired,\n    handleDelete: PropTypes.func.isRequired\n  }\n\nexport default BlogDetail","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport BlogDetail from './BlogDetail'\nconst Blog = ({ blog, handleLike , handleDelete}) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const blogRef = React.createRef();\n\n  const handleToggleVisibility = () => {\n    blogRef.current.toggleVisibility()\n  }\n\n  return (\n   \n     <div className =\"blog\">\n        <div style={blogStyle}  onClick={handleToggleVisibility} className=\"blog-user\" >\n                   \n                    <span className=\"title\">{blog.title}</span> &nbsp;\n                    <span className=\"author\">{blog.author}</span>\n        </div>\n\n        <BlogDetail\n            blog={blog}\n            handleLike = {handleLike}\n            handleDelete = {handleDelete}\n            ref={blogRef}\n            \n          />       \n   </div>\n  )\n  }\nBlog.propTypes = {\n  handleLike: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired\n}\n  \n\nexport default Blog","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport Blog from './Blog';\nconst BlogList = ({blogs, handleLike, handleDelete}) => {\nconsole.log(\"blog list component: blogs: \", blogs)\n  return (\n    <div>\n      {blogs.sort((a, b) => b.likes - a.likes).map(blog =><Blog \n                              key={blog.id}  \n                              blog={blog} \n                              handleLike = {handleLike(blog.id)}\n                              handleDelete = {handleDelete(blog.id)}\n                        />)}\n    </div>\n     )    \n\n}\n\nBlogList.propTypes = {\n  handleLike: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired\n}\nexport default BlogList","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n//const baseUrl = 'http://localhost:3003/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async() => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\nconst response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject)=> {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return response.data;\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n//const baseUrl = 'http://localhost:3003/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import { useState } from 'react'\n\n\nexport const useField = type => {\n  const [value, setValue] = useState('')\n\n  const onChange = event => {\n    setValue(event.target.value)\n  }\n\n  const reset = value => {\n    setValue(value)\n  }\n\n  const  inputProps = {\n              type,\n              value,\n              onChange,\n }\n\n  return {\n          inputProps,\n          reset\n  }\n          \n        \n  \n}\n","import React, { useState, useEffect } from \"react\"\nimport './App.css'\nimport Button from './components/Button'\nimport Footer from './components/Footer'\nimport LoginForm from './components/LoginForm'\nimport AddBlogForm from './components/AddBlogForm'\nimport Togglable from './components/Togglable'\nimport ErrorNotification from './components/ErrorNotification'\nimport SuccessNotification from './components/SuccessNotification'\nimport BlogList from \"./components/BlogList\"\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport { useField } from \"./hooks\"\n\n\nfunction App() {\n\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] =  useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  const username = useField(\"username\")\n  const password = useField(\"password\")\n  const title = useField(\"text\")\n  const author = useField(\"text\")\n  const url = useField(\"text\")\n  // create AddblogForm reference\n  const addBlogFormRef = React.createRef()\n\n\n\n  useEffect(() => {\n    blogService\n      .getAll().then(initialBlog => {\n       // let sortedBlog = sortByLikes(initialBlog)\n        setBlogs(initialBlog)\n       // setBlogs(sortedBlog)\n      })\n  }, [])\n  \n  console.log(\"initial blogs\", blogs)\n// get user information from localStorage\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogListappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n// handle login\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: username.inputProps.value,\n        password: password.inputProps.value\n      })\n      console.log(\"user services\", user)\n\n      window.localStorage.setItem(\n        'loggedBlogListappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      username.reset('')\n      password.reset('')\n      \n    } catch (exception) {\n      setErrorMessage(` Wrong username or password`)\n    \n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n  \n    }\n   \n  }\n\n\n\n// create new blog\nconst handleAddBlog = async (event) => {\n    event.preventDefault()\n    console.log( \"create blog\")\n\n    addBlogFormRef.current.toggleVisibility()\n\n    try {\n      const newBlog = {\n        title: title.inputProps.value,\n        author: author.inputProps.value,\n        url: url.inputProps.value,\n      }\n      console.log(\"new object to add: \", JSON.stringify(newBlog))\n      const blogCreated = await blogService.create(newBlog)\n      //setBlogs(blogs.concat(blogCreated))\n      console.log(\"new object to add: \", JSON.stringify(blogCreated))\n      setBlogs([...blogs, blogCreated])\n      setSuccessMessage(`a new blog added: ${title.inputProps.value} by ${user.name}`)\n      \n      title.reset('')\n      author.reset('')\n      url.reset('')\n      // Notification displays only 5s\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 5000)\n    } catch (error) {\n      setErrorMessage(`Something went wrong  ${error}`)\n    \n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n  \n    }\n  }\n// handle logout \n//logout functionality\nconst handleLogout = (event) => {\n  window.localStorage.clear()\n  setUser(null)\n  blogService.setToken(null)\n \n}\nconst handleLikeUpdate = blogId =>  async event => {\n  event.preventDefault();\n  try {\n\n    //use find method to get a current clicked blog\n    //\n    let foundBlog =  await blogs.find(blog => blog.id === blogId) \n    console.log( \"found blog\", foundBlog)\n    const newLike = foundBlog.likes + 1\n    let blogToUpdate = { ...foundBlog,\n                        likes: newLike,\n                        user: user.id\n                      }\n    console.log( \"updated blog\", blogToUpdate)\n    const blogUpdated = await  blogService.update(blogId, blogToUpdate)\n    console.log( \"updated blog\", blogUpdated)\n    setBlogs(blogs.map(blog => blog.id !== blogId ? blog: blogUpdated))\n    setSuccessMessage(\n       `Blog ${foundBlog.title} written by ${foundBlog.author} liked!`\n       );\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 5000)\n  } catch (error) {\n    setErrorMessage(`Something went wrong  ${error}`)\n    \n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n    \n    \n  }\n}\n\nconst handleDelete = blogId =>  async event => {\n  event.preventDefault();\n   //use find method to get a current clicked blog\n  let blogToDelete =  await blogs.find(blog => blog.id === blogId) \n  console.log( \"found blog:\", blogToDelete )\n  console.log( \"found blog id: \", blogToDelete.id )\n  console.log( \"found blog blogId: \", blogId)\n\n\n  // Get a new blog list\n  // exclude a blog to be deleted\n  const newBlogList =  await blogs.filter(blog => blog.id !== blogId)\n  console.log( \"new blog list: \", newBlogList)\n\n  let okCancel = window.confirm(\n    `Remove blog ${blogToDelete.title} by ${blogToDelete.author}?`\n    )\n  if (okCancel) {\n    try {\n \n      const deletedBlog = await  blogService.remove(blogId)\n      console.log( \"updated blog\", deletedBlog)\n      setBlogs(newBlogList)\n      setSuccessMessage(\n         `Blog post ${blogToDelete.title} deleted`\n         )\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 5000)\n    } catch (error) {\n      setErrorMessage(`Something went wrong  ${error}`)\n      \n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      \n      \n    }\n  }\n}\n  const loginForm = () =>{\n    return (\n      <div className = \"wrapper-box\" >\n                      <LoginForm\n                          handleLogin={handleLogin}\n                          username={username}\n                          password={password}\n                      />\n      </div> \n    )\n  }\n\n  const display = () =>{\n    if (blogs.length){\n\n   \n    return(\n      <div className = \"wrapper-box\" >\n                          <h2>Blogs</h2>\n                          \n                          <SuccessNotification message={successMessage}/>\n                          <p>{user.name} logged in\n                            <Button onClick={handleLogout} text = \"Logout\"/>\n                          </p>\n                          <Togglable buttonLabel=\"create\" ref ={addBlogFormRef} >\n                              <AddBlogForm \n                                handleAddBlog={handleAddBlog}\n                                title={title}\n                                author={author}\n                                url={url}              \n                              />\n                          </Togglable>\n\n                          <div className = \"wrapper-box-container\" >\n                            <BlogList\n                                  blogs = {blogs}\n                                  handleLike = {handleLikeUpdate}\n                                  handleDelete = {handleDelete}\n                            />\n                          </div>\n                    </div>\n    )\n  }\n  }\n\n\n  return (\n    <div className = \"wrapper\">\n        <ErrorNotification message={errorMessage}/>\n        {user? display(): loginForm()}\n               \n        <Footer />\n   </div>\n  )\n}\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}