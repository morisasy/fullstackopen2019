{"version":3,"sources":["components/Note.js","components/Notification.js","services/Services.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","length","notesToShow","filter","toggleImportanceOf","find","n","changedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAgBeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACN,qBACA,iBAEb,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCG3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCRDC,EAAU,8CAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCG1BK,EAhBF,WAOX,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uG,8NCJR,IAkGeC,EAlGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IAEGzB,MAAK,SAAAC,GACJc,EAASd,GACTsB,QAAQC,IAAI,gBAAiBvB,QAEhC,IACHsB,QAAQC,IAAI,SAAUV,EAAMY,OAAQ,SAEpC,IAAMC,EAAcT,EACMJ,EACAA,EAAMc,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAG9CsC,EAAqB,SAAAxB,GACzB,IAAMjB,EAAO0B,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,E,yVAAW,IAAQ5C,EAAR,CAAcG,WAAYH,EAAKG,YAEhDkC,EACUpB,EAAI2B,GACXhC,MAAK,SAAAC,GACJc,EAASD,EAAMmB,KAAI,SAAA7C,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAOa,SAClDiC,OAAM,SAAAC,GACTd,EAAgB,SAAD,OACFjC,EAAKK,QADH,sCAGb2C,YAAW,WACTf,EAAgB,QACf,KACLN,EAASD,EAAMc,QAAO,SAAAG,GAAC,OAAIA,EAAE1B,KAAOA,UAoCxC,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcT,QAASwB,IACvB,6BACE,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BAzCeS,EAAYM,KAAI,SAAA7C,GAAI,OACrC,kBAAC,EAAD,CACEiD,IAAKjD,EAAKiB,GACVjB,KAAMA,EACPC,iBAAkB,kBAAMwC,EAAmBzC,EAAKiB,WAwC/C,0BAAMiC,SA7BM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASuB,EACT0B,MAAM,IAAIC,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,IAE5BrB,EACSgB,GACPzC,MAAK,SAAAC,GACJc,EAASD,EAAMiC,OAAO9C,IACtBgB,EAAW,SAmBX,2BACE+B,MAAOhC,EACPiC,SArCiB,SAACV,GACxBhB,QAAQC,IAAIe,EAAMW,OAAOF,OACzB/B,EAAWsB,EAAMW,OAAOF,UAqCpB,4BAAQG,KAAK,UAAb,SAGF,kBAAC,EAAD,Q,MC9FNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.4cc183ac.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n             ? 'make not important'\n             : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;\n","import axios from 'axios';\nconst baseUrl = 'https://lit-river-24335.herokuapp.com/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n  \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n      </div> \n    )\n  }\n\n\n  export default Footer;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/Services';\nimport Footer from './components/Footer';\n\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('some error happened...');\n\n  useEffect(() => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then(response => {\n        setNotes(response)\n        console.log(\"notes fetched\", response)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const notesToShow = showAll\n                          ? notes\n                          : notes.filter(note => note.important)\n  \n  \n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(response => {\n        setNotes(notes.map(note => note.id !== id ? note : response))\n      }).catch(error => {\n      setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n     toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  \n  \n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n     noteService\n      .create(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response))\n        setNewNote('')\n      })\n    //setNotes(notes.concat(noteObject))\n    //setNewNote('')\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  \nimport './index.css'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}